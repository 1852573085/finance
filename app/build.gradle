apply plugin: 'com.android.application'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-android'
apply plugin: 'com.mob.sdk'
def proInfo = rootProject.ext.android
def libInfo = rootProject.ext.dependencies
android {
    compileSdkVersion proInfo.compileSdkVersion
    buildToolsVersion proInfo.buildToolsVersion
    defaultConfig {
        applicationId proInfo.applicationId
        minSdkVersion proInfo.minSdkVersion
        targetSdkVersion proInfo.targetSdkVersion
        versionCode proInfo.versionCode
        versionName proInfo.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    dataBinding{
        enabled = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation project(path: ':common')
    implementation project(path: ':core')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    if(accountModelIsRun.toBoolean()){
        implementation project(path: ':account')
    }
    if(finalceModelIsRun.toBoolean()){
        implementation project(path: ':finalce')
    }
    if(moreModelIsRun.toBoolean()){
        implementation project(path: ':more')
    }
    if(homeModelIsRun.toBoolean()){
        implementation project(path: ':home')
    }
    if(userModelIsRun.toBoolean()){
        implementation project(path: ':usermodel')
    }
    annotationProcessor libInfo.arouter_compiler
}
repositories {
    mavenCentral()
}
